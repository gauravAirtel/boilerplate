"use strict";

const config = require('../config');
const commonUtils = require('../utils/common');
const SocketIO = require('socket.io');
const middlewares = require('../core/middlewares');
const IoHandler = require('../core/handlers/ioHandler');

let io;

function init(server) {
    io = new SocketIO(server, config.socket.options);
    const ioHandler = IoHandler(io);

    /**
     * Replaced default socketId generated by socket.io
     */
    io.engine.generateId = () => commonUtils.getUUID();

    /**
     * Added authentication middleware
     */
    io.use(middlewares.socketAuth);

    io.on('connection', function (socket) {

        console.log('connected ========>', socket.id);

        socket.on('joined', function (data) {
            console.log('----------Joined---------');
            ioHandler.addUser(socket);
            ioHandler.joinUser(socket);
        });

        socket.on('message', async function (data) {
            const msgData = await ioHandler.processMessage(data);
            //[TODO] If conversation not already exists then add other member with socket

            if (msgData.error) {
                //[TODO] handle message send error case
                return;
            }
            socket.broadcast.to(data.conversationsId).emit('message', msgData); // to room
            socket.emit('chatUpdate', msgData); // to self
        });

        socket.on('joinConversation', function (data) {
            socket.join(data.conversationsId);
        });

        socket.on('disconnect', function () {
            console.log('!!========disconected ======!!');
        });

    });
}


module.exports = {
    init
}




